/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.testing;

import com.google.gson.reflect.TypeToken;
import java.awt.Color;
import java.text.DecimalFormat;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Denis
 */
public class ViewOrderV extends javax.swing.JFrame {
    private String VendorID;
    private List<Order> orderList;
    ArrayList<String> IDList;
    /**
     * Creates new form ViewOrderV
     */
    public ViewOrderV(String UserID) {
        initComponents();
        VendorID = UserID;
        showTB(VendorID);
        getContentPane().setBackground(Color.LIGHT_GRAY);
        OrderTB.setBackground(Color.LIGHT_GRAY);
        OrderTB.setForeground(Color.BLACK); 
        statusComboBox.setBackground(Color.DARK_GRAY);
        statusComboBox.setForeground(Color.WHITE);
        UpdateBTN.setBackground(Color.DARK_GRAY);
        UpdateBTN.setForeground(Color.WHITE);
    }
    
    private void showTB(String ID){
        DefaultTableModel model = (DefaultTableModel)OrderTB.getModel();
        model.setRowCount(0);
        String orderFilePath = "orders.txt";
        java.lang.reflect.Type orderType = new TypeToken<Order>(){}.getType();
        FileHandler<Order> orderFile = new FileHandler<>();
        orderList = orderFile.readTxt(orderFilePath, orderType);
        IDList = new ArrayList<>();
        ArrayList<String> customerID = new ArrayList<>();
        ArrayList<String> orderStatus = new ArrayList<>();
        ArrayList<String> orderTypeList = new ArrayList<>();
        ArrayList<String> oiNameList = new ArrayList<>();
        ArrayList<Integer> oiQuantityList = new ArrayList<>();
        ArrayList<String> oiTotalPriceTypeList = new ArrayList<>();
        DecimalFormat df = new DecimalFormat("0.00");
        for(Order item:orderList){
            if (!IDList.contains(item.orderID)&& ID.equals(item.vendorID) ){
                for (OrderItem oi:item.items){
                    IDList.add(item.orderID);
                    customerID.add(item.customerID);
                    oiNameList.add(oi.itemName);
                    oiQuantityList.add(oi.quantity);
                    oiTotalPriceTypeList.add(df.format(oi.price * oi.quantity));
                    orderStatus.add(item.orderStatus);
                    orderTypeList.add(item.orderType);
                }
                
            }
        }
        ArrayList<Object[]> tbcontent = new ArrayList<>();
        for (int i = 0; i < IDList.size(); i++) {
            tbcontent.add(new Object[]{IDList.get(i),customerID.get(i),oiNameList.get(i),oiQuantityList.get(i),oiTotalPriceTypeList.get(i),orderStatus.get(i),orderTypeList.get(i)});
            //tbcontent.add(new Object[]{IDList.get(i),itemList.get(i),quantity.get(i),priceList.get(i),amountList.get(i)});
        }
        System.out.println(tbcontent);
        for (Object[] line:tbcontent){
            model.addRow(line);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        OrderTB = new javax.swing.JTable();
        UpdateBTN = new javax.swing.JButton();
        statusComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        OrderTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OrderID", "CustomerID", "Item Name", "Quantity", "Total Price", "Status", "Order type"
            }
        ));
        OrderTB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrderTBMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(OrderTB);

        UpdateBTN.setText("Update Order Status");
        UpdateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBTNActionPerformed(evt);
            }
        });

        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Accepted", "Declined", "Completed" }));
        statusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(UpdateBTN)
                        .addGap(204, 204, 204))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(236, 236, 236))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(UpdateBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        VendorDashboard vd = new VendorDashboard();
        vd.show();        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void statusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusComboBoxActionPerformed

    private void UpdateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBTNActionPerformed
        String OrderID1 = OrderTB.getValueAt(OrderTB.getSelectedRow(), 0).toString();
        String CustomerID1 = OrderTB.getValueAt(OrderTB.getSelectedRow(), 1).toString();
        String newStatus = statusComboBox.getSelectedItem().toString();
        //String selectedStatus = statusComboBox.getSelectedItem().toString();
        for (Order od: orderList){
            if(od.orderID.equals(OrderID1)){
                Order save = od;
                orderList.removeIf(a -> a.orderID.equals(OrderID1));
                save.orderStatus = newStatus;
                orderList.add(save);
                
                String orderFilePath = "orders.txt";
                java.lang.reflect.Type orderType = new TypeToken<Order>(){}.getType();
                FileHandler<Order> orderFile = new FileHandler<>();
                orderFile.writeTxt(orderFilePath, orderList);
                
                updateNotificationFile(CustomerID1, OrderID1, newStatus);
                
                showTB(VendorID);
                JOptionPane.showMessageDialog(this, "Order Status Updated & Notification Sent!"); // ðŸ”¹ Display success message
                break;
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_UpdateBTNActionPerformed

    private void updateNotificationFile(String customerID, String orderID, String newStatus) {
    String notificationFilePath = "notifications.txt";
    java.lang.reflect.Type notificationType = new TypeToken<Notification>(){}.getType();
    FileHandler<Notification> notificationFile = new FileHandler<>();
    
    List<Notification> notificationList = notificationFile.readTxt(notificationFilePath, notificationType);
    if (notificationList == null) {
        notificationList = new ArrayList<>();
    }

    // ðŸ”¹ Generate unique notification ID
    String notificationID = "N" + String.format("%04d", notificationList.size() + 1);

    // ðŸ”¹ Create new notification using updated constructor
    Notification newNotification = new Notification(notificationID, customerID, 
                          "Your order " + orderID + " is " + newStatus);

    // ðŸ”¹ Add to notification list
    notificationList.add(newNotification);

    // ðŸ”¹ Write back to the file
    notificationFile.writeTxt(notificationFilePath, notificationList);
}
    private void OrderTBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderTBMouseClicked
          
        // TODO add your handling code here:
    }//GEN-LAST:event_OrderTBMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewOrderV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewOrderV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewOrderV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewOrderV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ViewOrderV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrderTB;
    private javax.swing.JButton UpdateBTN;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> statusComboBox;
    // End of variables declaration//GEN-END:variables
}
