/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.testing;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.JSONObject;

/**
 *
 * @author LEE YONG JUN
 */
public class DeliveryRunner_UpdateTasksStatus extends javax.swing.JFrame {
    private DeliveryRunnerFunctions functions;

    /**
     * Creates new form DeliveryRunner_TaskStatus
     */
    public DeliveryRunner_UpdateTasksStatus() {
        this(new DeliveryRunnerFunctions());
    }
    
    public DeliveryRunner_UpdateTasksStatus(DeliveryRunnerFunctions functions) {
        this.functions = functions;
        initComponents();
        setTitle("Delivery Runner Update Tasks Status");
        setLocationRelativeTo(null);
        DefaultTableModel model = (DefaultTableModel) updateTasksStatusTable.getModel();
        functions.populateDeliveryTasksTableWithDetails(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        backbutton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        searchtxtfield = new javax.swing.JTextField();
        clearbutton = new javax.swing.JButton();
        viewtasksbutton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        updateTasksStatusTable = new javax.swing.JTable();
        updateStatusButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 20)); // NOI18N
        jLabel1.setText("UPDATE TASKS STATUS");

        backbutton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        backbutton.setText("BACK");
        backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbuttonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("SEARCH : ");

        searchtxtfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchtxtfieldActionPerformed(evt);
            }
        });
        searchtxtfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchtxtfieldKeyReleased(evt);
            }
        });

        clearbutton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        clearbutton.setText("CLEAR");
        clearbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbuttonActionPerformed(evt);
            }
        });

        viewtasksbutton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        viewtasksbutton.setText("VIEW TASKS");
        viewtasksbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewtasksbuttonActionPerformed(evt);
            }
        });

        updateTasksStatusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Customer ID", "Order Type", "Delivery Fee", "Total Price", "Order Status", "House Number", "Street Name", "Residential Area", "Postal Code", "City", "State"
            }
        ));
        updateTasksStatusTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                updateTasksStatusTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(updateTasksStatusTable);

        updateStatusButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updateStatusButton.setText("UPDATE TASKS STATUS");
        updateStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateStatusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(316, 316, 316))
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(viewtasksbutton)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(backbutton)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchtxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateStatusButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clearbutton)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(clearbutton)
                        .addComponent(updateStatusButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(searchtxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backbutton)
                    .addComponent(viewtasksbutton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbuttonActionPerformed
        // TODO add your handling code here:
        functions.MainPage(this);
    }//GEN-LAST:event_backbuttonActionPerformed

    private void clearbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbuttonActionPerformed
        // TODO add your handling code here:
        updateTasksStatusTable.clearSelection();
    }//GEN-LAST:event_clearbuttonActionPerformed

    private void viewtasksbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewtasksbuttonActionPerformed
        // TODO add your handling code here:
        functions.ViewTasks(this);
    }//GEN-LAST:event_viewtasksbuttonActionPerformed

    private void searchtxtfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchtxtfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchtxtfieldActionPerformed

    private void searchtxtfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchtxtfieldKeyReleased
        // TODO add your handling code here:
        functions.updateTasksStatusTableSearchField(updateTasksStatusTable, searchtxtfield);
    }//GEN-LAST:event_searchtxtfieldKeyReleased

    private void updateTasksStatusTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateTasksStatusTableMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_updateTasksStatusTableMouseReleased

    private void updateStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateStatusButtonActionPerformed
        // TODO add your handling code here:
        int row = updateTasksStatusTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Please select a task to update!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Retrieve the order ID from the selected row
        String orderID = updateTasksStatusTable.getValueAt(row, 0).toString();

        // Prompt the user to select a new status
        String[] statusOptions = {"Out for Delivery", "Delivered Successfully", "Cancelled"};
        String newStatus = (String) JOptionPane.showInputDialog(this, "Mark the status for the task:", "Update Tasks Status", JOptionPane.QUESTION_MESSAGE, null, statusOptions, statusOptions[0]);

        if (newStatus == null) {
            JOptionPane.showMessageDialog(this, "No status selected. Task status was not updated.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Update the order status in orders.txt
        boolean success = functions.updateTaskStatus(orderID, newStatus);

        if (success) {
            // Notify the customer
            String customerID = functions.getCustomerIDFromOrder(orderID); // Get the customer ID from the order
            if (customerID == null || customerID.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Failed to retrieve customer ID for order " + orderID, "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String notificationContent = "Your order " + orderID + " status has been updated to: " + newStatus;
            functions.sendNotification(customerID, notificationContent);

            JOptionPane.showMessageDialog(this, "Task status updated successfully!", "Status Updated", JOptionPane.INFORMATION_MESSAGE);

            // Refresh the table to reflect the changes
            DefaultTableModel model = (DefaultTableModel) updateTasksStatusTable.getModel();
            functions.populateDeliveryTasksTableWithDetails(model); // Use the correct method

            // Clear the selection
            updateTasksStatusTable.clearSelection();
        } else {
            JOptionPane.showMessageDialog(this, "Failed to update the task status. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_updateStatusButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        DeliveryRunnerFunctions functions = new DeliveryRunnerFunctions();

        java.awt.EventQueue.invokeLater(() -> {
            new DeliveryRunner_UpdateTasksStatus(functions).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbutton;
    private javax.swing.JButton clearbutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField searchtxtfield;
    private javax.swing.JButton updateStatusButton;
    private javax.swing.JTable updateTasksStatusTable;
    private javax.swing.JButton viewtasksbutton;
    // End of variables declaration//GEN-END:variables
}
