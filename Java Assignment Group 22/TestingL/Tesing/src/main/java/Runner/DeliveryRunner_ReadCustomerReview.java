/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.testing;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.JSONObject;

/**
 *
 * @author LEE YONG JUN
 */
public class DeliveryRunner_ReadCustomerReview extends javax.swing.JFrame {
    private DeliveryRunnerFunctions functions;
    private DefaultTableModel model;

    /**
     * Creates new form DeliveryRunner_ReadCustomerReview
     */
    public DeliveryRunner_ReadCustomerReview() {
        this(new DeliveryRunnerFunctions());

    }
    
    public DeliveryRunner_ReadCustomerReview(DeliveryRunnerFunctions functions) {
        this.functions = new DeliveryRunnerFunctions();

        initComponents();
        setTitle("Delivery Runner Read Customer Review");
        setLocationRelativeTo(null);

        model = (DefaultTableModel) customerreviewstable.getModel();
        functions.loadRunnerReviewsTable(model); // Load only delivery runner reviews
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        backbutton = new javax.swing.JButton();
        showallbutton = new javax.swing.JButton();
        ratingspinner = new javax.swing.JSpinner();
        submitbutton = new javax.swing.JButton();
        clearbutton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        customerreviewstable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 20)); // NOI18N
        jLabel1.setText("READ CUSTOMER REVIEWS");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("CHOOSE RATING (1 - 5) : ");

        backbutton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        backbutton.setText("BACK");
        backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbuttonActionPerformed(evt);
            }
        });

        showallbutton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        showallbutton.setText("SHOW ALL");
        showallbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showallbuttonActionPerformed(evt);
            }
        });

        ratingspinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        submitbutton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        submitbutton.setText("SUBMIT");
        submitbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitbuttonActionPerformed(evt);
            }
        });

        clearbutton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        clearbutton.setText("CLEAR");
        clearbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbuttonActionPerformed(evt);
            }
        });

        customerreviewstable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Review ID", "Customer ID", "Entity Type", "Reviewed Entity ID", "Rating", "Comment"
            }
        ));
        jScrollPane2.setViewportView(customerreviewstable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backbutton)
                .addGap(404, 404, 404))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(299, 299, 299)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ratingspinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(submitbutton))))
                            .addComponent(showallbutton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearbutton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showallbutton)
                    .addComponent(jLabel2)
                    .addComponent(ratingspinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitbutton)
                    .addComponent(clearbutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backbutton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbuttonActionPerformed
        // TODO add your handling code here:
        functions.MainPage(this);
    }//GEN-LAST:event_backbuttonActionPerformed

    private void submitbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitbuttonActionPerformed
        // TODO add your handling code here:
        int selectedRating = (int) ratingspinner.getValue();

        // Clear the current rows in the table
        model.setRowCount(0);

        try (BufferedReader br = new BufferedReader(new FileReader("reviews.txt"))) {
            String line;

            // Read each line and parse it as JSON
            while ((line = br.readLine()) != null) {
                if (line.trim().isEmpty()) continue; // Skip empty lines
                // Parse the line as a JSON object
                JSONObject jsonObject = new JSONObject(line.trim());
                int rating = jsonObject.getInt("rating");

                // Only add the row if the rating matches the selected rating
                if (rating == selectedRating) {
                    String reviewID = jsonObject.getString("reviewID");
                    String customerID = jsonObject.getString("customerID");
                    String entityType = jsonObject.getString("entityType");
                    String reviewedEntityID = jsonObject.getString("reviewedEntityID");
                    String comment = jsonObject.getString("comment");

                    // Add the parsed data as a new row in the table
                    model.addRow(new String[]{reviewID, customerID, entityType, reviewedEntityID, String.valueOf(rating), comment});
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error loading reviews: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_submitbuttonActionPerformed

    private void showallbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showallbuttonActionPerformed
        // TODO add your handling code here:
        functions.loadRunnerReviewsTable(model); // Refresh table with delivery runner reviews
    }//GEN-LAST:event_showallbuttonActionPerformed

    private void clearbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbuttonActionPerformed
        // TODO add your handling code here:
        // Unselect any selected row in the table
        customerreviewstable.clearSelection();
    }//GEN-LAST:event_clearbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        DeliveryRunnerFunctions functions = new DeliveryRunnerFunctions();

        java.awt.EventQueue.invokeLater(() -> {
            new DeliveryRunner_ReadCustomerReview(functions).setVisible(true);
        });
    } 


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbutton;
    private javax.swing.JButton clearbutton;
    private javax.swing.JTable customerreviewstable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner ratingspinner;
    private javax.swing.JButton showallbutton;
    private javax.swing.JButton submitbutton;
    // End of variables declaration//GEN-END:variables
}
