/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import java.util.List;
import javax.swing.table.DefaultTableModel;
import com.mycompany.testing.Complain;
import com.mycompany.testing.Order;
import com.mycompany.testing.OrderItem;
import java.awt.Point;
import java.util.ArrayList;
import javax.swing.*;
/**
 *
 * @author georg
 */
public class Complains extends javax.swing.JFrame {

    Timer timer;
    int row;
    int column;
    Details dt = new Details();
    /**
     * Creates new form Complains
     */
    public Complains() {
        initComponents();
        showTBdata();
        CB();
    }
    private void CB(){
        statusCB.removeAllItems();
        statusCB.addItem("-");
        statusCB.addItem("Pending");
        statusCB.addItem("Resolved");
    }

    private void showTBdata(){
        timer = new Timer(600,e -> showOrderDetails());
        DefaultTableModel CPModel = (DefaultTableModel)complainTB.getModel();
        CPModel.setRowCount(0);
        List<Complain> complainList = MF.getComplain();
        ArrayList<String[]> CPFB = new ArrayList<>();
        for(Complain cp:complainList){
            if(statusCB.getSelectedIndex() == 0 ||cp.status.equals(statusCB.getSelectedItem())){
                CPFB.add(new String[]{cp.complainID,cp.customerID,cp.orderID,cp.complainContent,cp.status});
            }
        }
        for (Object[] fb : CPFB) {
            CPModel.addRow(fb);
        }
    }
    private void showOrderDetails(){
        if(column == 2){
            String OrderID = (String)complainTB.getValueAt(row, column);
            List<Order> orderList = MF.getOrder();
            String content = "";
            for (Order od:orderList){
                if (od.orderID.equals(OrderID)){
                    content += "OrderID:"+od.orderID;
                    content += "\nCustomer:"+od.customerID;
                    content += "\nVendorID:"+od.vendorID;
                    content += "\nOrderItem:";
                    for (OrderItem oi:od.items){
                        content += "\n    Item:"+oi.itemName;
                        content += "\n    Price:"+oi.price;
                        content += "\n    Quantity:"+oi.quantity;
                    }
                    content += "\nDelivery Fee:"+od.deliveryFee;
                    content += "\nTotal Price:"+od.totalPrice;
                    content += "\nDate"+od.GetDate();
                }
            }
            dt.setText(content);
            dt.setVisible(true);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        complainTB = new javax.swing.JTable();
        btComplete = new javax.swing.JButton();
        statusCB = new javax.swing.JComboBox<>();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        complainTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Complain ID", "Customer ID", "Order ID", "Reason", "Status"
            }
        ));
        complainTB.setToolTipText("");
        complainTB.setSelectionBackground(new java.awt.Color(102, 102, 102));
        complainTB.setSelectionForeground(new java.awt.Color(204, 204, 204));
        complainTB.setShowGrid(false);
        complainTB.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                complainTBMouseMoved(evt);
            }
        });
        jScrollPane1.setViewportView(complainTB);
        if (complainTB.getColumnModel().getColumnCount() > 0) {
            complainTB.getColumnModel().getColumn(0).setResizable(false);
            complainTB.getColumnModel().getColumn(0).setPreferredWidth(50);
        }

        btComplete.setText("Complete");
        btComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCompleteActionPerformed(evt);
            }
        });

        statusCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        statusCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btComplete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(statusCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(statusCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btComplete)
                .addGap(56, 56, 56))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        HomePage hp = new HomePage(); 
        hp.setVisible(true);
        dt.setVisible(false);
        timer.stop();
    }//GEN-LAST:event_formWindowClosing

    private void complainTBMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_complainTBMouseMoved
        int lastRow = -1;int lastColumn = -1;
        row = complainTB.rowAtPoint(evt.getPoint());
        column = complainTB.columnAtPoint(evt.getPoint());
        if (row!=lastRow||column !=lastColumn){
            timer.restart();
            lastRow = row;
            lastColumn = column;
            dt.setVisible(false);
        }
        Point p = evt.getLocationOnScreen();
        dt.setLocation(p.x,p.y);
    }//GEN-LAST:event_complainTBMouseMoved

    private void statusCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusCBActionPerformed
        showTBdata();
    }//GEN-LAST:event_statusCBActionPerformed

    private void btCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCompleteActionPerformed
        if(complainTB.getSelectedRow()!= -1){
            DefaultTableModel CPModel = (DefaultTableModel)complainTB.getModel();
            List<Complain> cplist = MF.getComplain();
            String ComplainID = CPModel.getValueAt(complainTB.getSelectedRow(),0).toString();
            int i = -1;
            for (Complain cp:cplist){
                i++;
                if (cp.complainID.equals(ComplainID)){
                    System.out.println("!!");
                    cp.status = "Resolved";
                    Complain Register = cp;
                    cplist.removeIf(a -> a.complainID.equals(ComplainID));
                    System.out.println(Register);
                    cplist.add(i,Register);
                    MF.writeComplain(cplist);
                    showTBdata();
                    break;
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "No Complain is selected", "Unknown", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btCompleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Complains.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Complains.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Complains.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Complains.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Complains().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btComplete;
    private javax.swing.JTable complainTB;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> statusCB;
    // End of variables declaration//GEN-END:variables
}
