/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import Vendor.VendorDashboard;
import com.google.gson.reflect.TypeToken;
import com.mycompany.testing.FileHandler;
import com.mycompany.testing.Menu;
import com.mycompany.testing.Order;
import com.mycompany.testing.OrderItem;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory; 
import org.jfree.chart.ChartPanel; 
import org.jfree.chart.JFreeChart; 
import org.jfree.data.general.DefaultPieDataset; 
import javax.swing.JFrame; 
import java.awt.Color;

/**
 *
 * @author georg
 */
public class VendorRevenue extends javax.swing.JFrame {
    /**
     * Creates new form VendorRevenue
     */
    private String UserID;
    private String u;//u = "M" manager, u = "V" = vendor
    public VendorRevenue(String userID,String u) {
        this.UserID = userID;
        this.u = u;
        initComponents();
        showTBData(userID);
    }
    private void showTBData(String ID){
        List<Menu> menuList = MF.getMenu();
        List<Order> orderList = MF.getOrder();
        ArrayList<String> IDList = new ArrayList<>();
        ArrayList<String> itemList = new ArrayList<>();
        ArrayList<Double> priceList = new ArrayList<>();
        DecimalFormat df = new DecimalFormat("0.00");
        for(Menu item:menuList){
            if (!itemList.contains(item.itemName)&& ID.equals(item.vendorID)){
                IDList.add(item.itemID);
                itemList.add(item.itemName);
                priceList.add(item.price);
            }
        }
        ArrayList<Integer> quantity = new ArrayList<>();
        for(int i=0;i<itemList.size();i++){
            for(Order order:orderList){
                for(OrderItem item:order.items){
                    if (itemList.get(i).equals(item.itemName)){
                        if (quantity.size() == i ){
                            quantity.add(item.quantity);
                        }
                        else{
                            quantity.set(i, quantity.get(i) + item.quantity);
                        }
                    }
                }
            }
        }
        ArrayList<Double> amountList = new ArrayList<>();
        System.out.println(itemList.size());
        for (int i = 0; i < itemList.size(); i++) {
            if(quantity.size()>=i){
                quantity.add(0);
            }
            Double Amount = priceList.get(i) * quantity.get(i);
            amountList.add(Amount);
        }
        DefaultTableModel model = (DefaultTableModel)RevenueTB.getModel();
        ArrayList<Object[]> tbcontent = new ArrayList<>();
        Double TotalAmount = 0.0;
        for (int i = 0; i < IDList.size(); i++) {
            tbcontent.add(new Object[]{IDList.get(i),itemList.get(i),quantity.get(i),df.format(priceList.get(i)),df.format(amountList.get(i))});
            TotalAmount += amountList.get(i);
        }
        tbcontent.add(new Object[]{"","","","",df.format(TotalAmount)});
        System.out.println(tbcontent);
        for (Object[] line:tbcontent){
            model.addRow(line);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        RevenueTB = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        RevenueTB.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        RevenueTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " Item ID", "Item Name", "Quantity", "Price", "Total Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        RevenueTB.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        RevenueTB.setSelectionBackground(new java.awt.Color(204, 204, 204));
        RevenueTB.setSelectionForeground(new java.awt.Color(255, 255, 255));
        RevenueTB.setShowGrid(false);
        RevenueTB.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(RevenueTB);
        if (RevenueTB.getColumnModel().getColumnCount() > 0) {
            RevenueTB.getColumnModel().getColumn(0).setResizable(false);
            RevenueTB.getColumnModel().getColumn(1).setResizable(false);
            RevenueTB.getColumnModel().getColumn(2).setResizable(false);
            RevenueTB.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (u.equals("V")){
            VendorDashboard vd = new VendorDashboard(UserID);
            vd.setVisible(true);
        }
        if (u.equals("M")){
            VendorSelect rd = new VendorSelect("Revenue");
            rd.setVisible(true);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VendorRevenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VendorRevenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VendorRevenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VendorRevenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run(){
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable RevenueTB;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
