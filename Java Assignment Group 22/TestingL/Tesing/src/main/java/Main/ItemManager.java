/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import com.google.gson.reflect.TypeToken;
import com.mycompany.testing.FileHandler;
import com.mycompany.testing.Menu;
import com.mycompany.testing.User;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author georg
 */
public class ItemManager extends javax.swing.JFrame {

    /**
     * Creates new form ItemManager
     */
    private List<Menu> menuList;
    private String userID;

    public ItemManager() {
        initComponents();
        showTBData();
    }
    private void showTBData(){
        DefaultTableModel model = (DefaultTableModel)itemTB.getModel();
        model.setRowCount(0);
        menuList = MF.getMenu();
        ArrayList<String> itemIDList = new ArrayList<>();
        //ArrayList<String> vendorIDList = new ArrayList<>();
        ArrayList<String> itemList = new ArrayList<>();
        ArrayList<Double> priceList = new ArrayList<>();
        ArrayList<String> statusList = new ArrayList<>();
        DecimalFormat df = new DecimalFormat("0.00");
        for(Menu item:menuList){
            if (!itemList.contains(item.itemName)){
                itemIDList.add(item.itemID);
                //vendorIDList.add(item.vendorID);
                itemList.add(item.itemName);
                priceList.add(item.price);
                statusList.add(item.status);
            }
        }
        
        ArrayList<Object[]> tbcontent = new ArrayList<>();
        for (int i = 0; i < itemIDList.size(); i++) {
            tbcontent.add(new Object[]{itemIDList.get(i),itemList.get(i),df.format(priceList.get(i)),statusList.get(i)});
            //tbcontent.add(new Object[]{itemIDList.get(i),itemList.get(i),quantity.get(i),priceList.get(i),amountList.get(i)});
        }
        System.out.println(tbcontent);
        for (Object[] line:tbcontent){
            model.addRow(line);
        }
    }
    private void writeInFile(String status){
        DefaultTableModel model = (DefaultTableModel)itemTB.getModel();
        String ItemID = model.getValueAt(itemTB.getSelectedRow(), 0).toString();
        Menu register = null;
        int i = -1;
        for(Menu menu:menuList){
            i++;
            if(menu.itemID.equals(ItemID)){
                register = menu;
                register.status = status;
                menuList.removeIf(mn -> mn.itemID.equals(ItemID));
                menuList.add(i,register);
                break;
            }
        }
        MF.writeMenu(menuList);
        showTBData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane8 = new javax.swing.JScrollPane();
        itemTB = new javax.swing.JTable();
        rejectBT = new javax.swing.JButton();
        approveBT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        itemTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "name", "price", "status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemTB.setColumnSelectionAllowed(true);
        itemTB.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        itemTB.getTableHeader().setReorderingAllowed(false);
        jScrollPane8.setViewportView(itemTB);
        itemTB.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        rejectBT.setText("Unavailable");
        rejectBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectBTActionPerformed(evt);
            }
        });

        approveBT.setText("Available");
        approveBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(rejectBT)
                        .addGap(90, 90, 90)
                        .addComponent(approveBT)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rejectBT)
                    .addComponent(approveBT))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        HomePage hp = new HomePage(); 
        hp.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void rejectBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectBTActionPerformed
        writeInFile("Unavailable");
    }//GEN-LAST:event_rejectBTActionPerformed

    private void approveBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveBTActionPerformed
        writeInFile("Available");
    }//GEN-LAST:event_approveBTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemManager().setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveBT;
    private javax.swing.JTable itemTB;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JButton rejectBT;
    // End of variables declaration//GEN-END:variables
}
