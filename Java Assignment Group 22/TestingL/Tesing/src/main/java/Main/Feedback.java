/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import java.lang.reflect.Type;
import com.google.gson.reflect.TypeToken;
import com.mycompany.testing.FileHandler;
import com.mycompany.testing.Menu;
import com.mycompany.testing.Review;
import com.mycompany.testing.User;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author georg
 */
public class Feedback extends javax.swing.JFrame {

    /**
     * Creates new form Feedback
     */
    public Feedback() {
        initComponents();
        CB();
        showTBdata1();
        showTBdata2();
    }
    private void CB(){
        for(int i = 1;i<=5;i++){
            ratingCB.addItem("ðŸŒŸ".repeat(i));
            ratingCB2.addItem("ðŸŒŸ".repeat(i));
        }
        String menuFilePath = "menus.txt";
        java.lang.reflect.Type menuType = new TypeToken<Menu>() {}.getType();
        FileHandler<Menu> menuFileHandler = new FileHandler<>();
        List<Menu> MenuList = menuFileHandler.readTxt(menuFilePath, menuType);
        for (Menu menu:MenuList){
            itemCB.addItem(menu.itemID);
        }
        String userFilePath = "users.txt";
        java.lang.reflect.Type userType = new TypeToken<User>() {}.getType();
        FileHandler<User> userFileHandler = new FileHandler<>();
        List<User> UserList = userFileHandler.readTxt(userFilePath, userType);
        for (User user:UserList){
            if(user.getRole().equals("DeliveryRunner")){
                deliveryCB.addItem(user.getUserID());
            }
        }
    }
    private void showTBdata2(){
        DefaultTableModel deliveryModel = (DefaultTableModel)deliveryTB.getModel();
        deliveryModel.setRowCount(0);
        String reviewFilePath = "reviews.txt";
        java.lang.reflect.Type reviewType = new TypeToken<Review>() {}.getType();
        FileHandler<Review> reviewFileHandler = new FileHandler<>();
        List<Review> ReviewList = reviewFileHandler.readTxt(reviewFilePath, reviewType);
        ArrayList<String[]> deliveryFB = new ArrayList<>();
        for(Review dt:ReviewList){
            if(dt.entityType.equals("D")){
                if ((ratingCB2.getSelectedIndex() == 0 || ratingCB2.getSelectedIndex() == dt.rating)&&
                    (deliveryCB.getSelectedIndex() == 0 || deliveryCB.getSelectedItem().equals(dt.reviewedEntityID))) {
                    deliveryFB.add(new String[]{dt.reviewedEntityID, "ðŸŒŸ".repeat(dt.rating), dt.comment});
                }
            }
        }
        for (Object[] fb : deliveryFB) {
            deliveryModel.addRow(fb);
        }
    }
    
    private void showTBdata1(){
        DefaultTableModel itemModel = (DefaultTableModel)itemTB.getModel();
        itemModel.setRowCount(0);
        String reviewFilePath = "reviews.txt";
        String menuFilePath = "menus.txt";
        java.lang.reflect.Type reviewType = new TypeToken<Review>() {}.getType();
        java.lang.reflect.Type menuType = new TypeToken<Menu>() {}.getType();
        FileHandler<Review> reviewFileHandler = new FileHandler<>();
        FileHandler<Menu> menuFileHandler = new FileHandler<>();
        List<Review> ReviewList = reviewFileHandler.readTxt(reviewFilePath, reviewType);
        List<Menu> MenuList = menuFileHandler.readTxt(menuFilePath, menuType);
        ArrayList<String[]> itemFB = new ArrayList<>();
        
        /*ArrayList<String[]> menuL = new ArrayList<>();
        for(Menu menu:MenuList){
            menuL.add(new String[]{menu.itemID,menu.vendorID,menu.itemName});
        }*/
        for(Review dt:ReviewList){
            if(dt.entityType.equals("F")){
                if ((ratingCB.getSelectedIndex() == 0 || ratingCB.getSelectedIndex() == dt.rating)&&
                    (itemCB.getSelectedIndex() == 0 || itemCB.getSelectedItem().equals(dt.reviewedEntityID))) {
                    itemFB.add(new String[]{dt.reviewedEntityID, "ðŸŒŸ".repeat(dt.rating), dt.comment});
                }
            }
        }
        for (Object[] fb : itemFB) {
            itemModel.addRow(fb);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame2 = new javax.swing.JFrame();
        jDialog1 = new javax.swing.JDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jSeparator1 = new javax.swing.JSeparator();
        ratingCB1 = new javax.swing.JComboBox<>();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemTB = new javax.swing.JTable();
        ratingCB = new javax.swing.JComboBox<>();
        itemCB = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        deliveryTB = new javax.swing.JTable();
        ratingCB2 = new javax.swing.JComboBox<>();
        deliveryCB = new javax.swing.JComboBox<>();

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        ratingCB1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        itemTB.setForeground(new java.awt.Color(102, 102, 102));
        itemTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Menu ID", "Rating", "Comment"
            }
        ));
        itemTB.setSelectionBackground(new java.awt.Color(204, 204, 204));
        itemTB.setSelectionForeground(new java.awt.Color(51, 51, 51));
        itemTB.setShowGrid(false);
        jScrollPane2.setViewportView(itemTB);

        ratingCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        ratingCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ratingCBItemStateChanged(evt);
            }
        });
        ratingCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ratingCBActionPerformed(evt);
            }
        });

        itemCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        itemCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                itemCBItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ratingCB, 0, 99, Short.MAX_VALUE)
                    .addComponent(itemCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ratingCB, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(itemCB, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 104, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Item", jPanel1);

        deliveryTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Runner ID", "Rating", "Comment"
            }
        ));
        deliveryTB.setGridColor(new java.awt.Color(153, 153, 153));
        deliveryTB.setSelectionBackground(new java.awt.Color(153, 153, 153));
        jScrollPane3.setViewportView(deliveryTB);

        ratingCB2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        ratingCB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ratingCB2ActionPerformed(evt);
            }
        });

        deliveryCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        deliveryCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliveryCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ratingCB2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deliveryCB, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(ratingCB2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(deliveryCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Delivery Runner", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        HomePage hp = new HomePage(); 
        hp.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void ratingCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ratingCBItemStateChanged
        showTBdata1();// TODO add your handling code here:
    }//GEN-LAST:event_ratingCBItemStateChanged

    private void itemCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_itemCBItemStateChanged
        showTBdata1();// TODO add your handling code here:
    }//GEN-LAST:event_itemCBItemStateChanged

    private void ratingCB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ratingCB2ActionPerformed
        showTBdata2();
    }//GEN-LAST:event_ratingCB2ActionPerformed

    private void ratingCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ratingCBActionPerformed
        
    }//GEN-LAST:event_ratingCBActionPerformed

    private void deliveryCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliveryCBActionPerformed
        showTBdata2();
    }//GEN-LAST:event_deliveryCBActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Feedback().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> deliveryCB;
    private javax.swing.JTable deliveryTB;
    private javax.swing.JComboBox<String> itemCB;
    private javax.swing.JTable itemTB;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JComboBox<String> ratingCB;
    private javax.swing.JComboBox<String> ratingCB1;
    private javax.swing.JComboBox<String> ratingCB2;
    // End of variables declaration//GEN-END:variables
}
